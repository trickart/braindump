<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/braindump/feed.xml" rel="self" type="application/atom+xml" /><link href="/braindump/" rel="alternate" type="text/html" /><updated>2023-02-01T18:37:38+09:00</updated><id>/braindump/feed.xml</id><title type="html">braindump</title><subtitle>自分の頭の中をdumpするための場所</subtitle><entry><title type="html">マルチプラットフォームなGUIフレームワーク触りたくない</title><link href="/braindump/dump/2023/02/01/i-dont-like-multi-platform-gui-framework.html" rel="alternate" type="text/html" title="マルチプラットフォームなGUIフレームワーク触りたくない" /><published>2023-02-01T18:30:00+09:00</published><updated>2023-02-01T18:30:00+09:00</updated><id>/braindump/dump/2023/02/01/i-dont-like-multi-platform-gui-framework</id><content type="html" xml:base="/braindump/dump/2023/02/01/i-dont-like-multi-platform-gui-framework.html">&lt;h1 id=&quot;flutterとかあんま関わりたくないなぁという話&quot;&gt;Flutterとかあんま関わりたくないなぁという話&lt;/h1&gt;
&lt;p&gt;一言で言えばこれではあるんだけど。&lt;br /&gt;
一体いくつのGUI Frameworkが現れては消えていったんだろうか。Xamarin、Cordova、Ionic…&lt;/p&gt;

&lt;p&gt;いや消えてわけではないかもしれないが、しかし「現在どれだけの人が話題にし、新たに学ぶ人が出てきたか？」を考えると非常に厳しい状態であることは変わらないのではないか？&lt;/p&gt;

&lt;p&gt;そんな状態でFlutterだのReact Nativeだの言われても真面目に向き合う気になれないのはただの老化なのだろうか？&lt;/p&gt;

&lt;h1 id=&quot;apple自らがサポートしない限り継続性が怪しい&quot;&gt;Apple自らがサポートしない限り継続性が怪しい&lt;/h1&gt;
&lt;p&gt;まぁこれが理由の8割ぐらいを締めているわけだが。&lt;/p&gt;

&lt;p&gt;iOSアプリを作ってると毎年メジャーアップデートで何かが壊れる。そのたびに自分たちのコードを直したりする傍らで動かなくなったライブラリのアップデートをしたり、更新が途絶えたやつだったら捨てて自前で再実装したりしている。&lt;/p&gt;

&lt;p&gt;ちょっとした賽の河原のような場所で暮らしているiOSアプリ開発者たちは、メジャーアップデートに備えてなるべくライブラリは使いたがらないし、使ったとしても「いざとなったら自分で作れる・直せるな」と思える範囲のライブラリを採用する傾向があるように思う。&lt;br /&gt;
(ライブラリがMITライセンスでソースコードが公開されているものばかりというのもこういった事情が影響しているのかもしれない)&lt;/p&gt;

&lt;p&gt;一部の機能のためのライブラリでこの体たらく。これがGUI Frameworkだったらどう対処すればいいのか正直検討がつかない。&lt;/p&gt;

&lt;p&gt;その点でFlutterは他よりちょっとマシかもしれない。なんたってGoogleが作ってるからAndroidのことは比較的安心できるのではないか。&lt;br /&gt;
と書いてて思ったが様々なサービスをバッサリ切り捨てるGoogleを信用するべきではない気もしてきた。&lt;/p&gt;

&lt;p&gt;まぁともかくもう片方であるAppleがサポートしないものである以上、厳しいことには変わらないはずだ。&lt;/p&gt;

&lt;h1 id=&quot;キャリアが不透明になりがち&quot;&gt;キャリアが不透明になりがち&lt;/h1&gt;

&lt;p&gt;技術としての継続性に疑問符がつくため、プログラマーとしてのキャリアをどうするかを考慮しなければならないだろう。&lt;/p&gt;

&lt;p&gt;「iOSアプリ開発を10年やってました」という人はそこそこの数いるだろう。だが「〇〇(何らかのMultiplatform GUI Framework)のアプリ開発を10年やってました」という人がどれだけいるだろうか？&lt;/p&gt;

&lt;p&gt;まぁ終わったら終わったで別の仕事をしようと割り切るという人もいるかも知れないが、そんな人ばかりではないのではないか？&lt;/p&gt;

&lt;h1 id=&quot;iosとandroidでuiを共通化してメリットを享受できるのは経営者&quot;&gt;iOSとAndroidでUIを共通化してメリットを享受できるのは経営者&lt;/h1&gt;
&lt;p&gt;まず、ユーザーのためにはならない。なぜならほとんどのユーザーはiPhoneかAndroidのどちらかしか持っておらず、もう片方と一致していることはユーザーにとってなんの利点もない。&lt;br /&gt;
(公平性の観点から共通のUIであることがユーザーに利する例として、ゲームがこれに該当する。今回ゲームやUnityについては語らない)&lt;/p&gt;

&lt;p&gt;むしろ、プラットフォーム固有のデザインと異なることでユーザーに混乱をもたらす可能性すらある。&lt;/p&gt;

&lt;p&gt;開発者も一見楽になるかと思いきや、そうとも限らない。&lt;/p&gt;

&lt;p&gt;共通化出来ると言っても、プラットフォーム固有の機能を使う際はそのプラットフォームの手順に従う必要がある。例えばBluetoothを使用しようとしたときの権限取得フローがiOSとAndroidで異なっていたりする。&lt;/p&gt;

&lt;p&gt;こういったときUIを共通化しようとすると結構難しく、最大公約数的・冗長な形になりがちである。&lt;/p&gt;

&lt;p&gt;ユーザーは損をする、開発者は得したり損したりするとなったとき、メリットを十分に享受できるのは経営者・プロジェクト責任者だろう。&lt;br /&gt;
経営者・プロジェクト責任者として関わるのなら悪くないのかもしれないが、一開発者としては関わらないで済むならそうしたい。&lt;/p&gt;

&lt;h1 id=&quot;プラットフォームネイティブなモバイルアプリの仕事を続けたい&quot;&gt;プラットフォームネイティブなモバイルアプリの仕事を続けたい&lt;/h1&gt;
&lt;p&gt;ユーザーには多少デメリットがあるが会社にとって短期的には時間的・金銭的に得な手段をとるというのはつまり、「あまりモバイルアプリに投資されない環境」ということなのかもしれない。&lt;/p&gt;

&lt;p&gt;そうなると、「儲かってるメガベンチャーに行くのが正しいのでは？」という身も蓋もない話になる気がしてきた。最悪すぎる。&lt;/p&gt;</content><author><name></name></author><category term="dump" /><summary type="html">Flutterとかあんま関わりたくないなぁという話 一言で言えばこれではあるんだけど。 一体いくつのGUI Frameworkが現れては消えていったんだろうか。Xamarin、Cordova、Ionic…</summary></entry><entry><title type="html">プログラマは趣味でコードを書くぐらいじゃないとつらいのか？</title><link href="/braindump/dump/2023/01/12/programmers-qualities.html" rel="alternate" type="text/html" title="プログラマは趣味でコードを書くぐらいじゃないとつらいのか？" /><published>2023-01-12T19:46:30+09:00</published><updated>2023-01-12T19:46:30+09:00</updated><id>/braindump/dump/2023/01/12/programmers-qualities</id><content type="html" xml:base="/braindump/dump/2023/01/12/programmers-qualities.html">&lt;h1 id=&quot;残念ながら現在はそう&quot;&gt;残念ながら現在はそう&lt;/h1&gt;
&lt;p&gt;Twitterを始めとしたネットではよく「プログラマとして食っていくには趣味で休日もコード書くくらいじゃないと」といった言葉がささやかれる。&lt;/p&gt;

&lt;p&gt;個人的には残念ながらこれはある程度正しいと感じている。&lt;br /&gt;
“ある程度”と言うのはコードは書かないにしても、「技術に関して日常的に触れているタイプじゃないとつらいだろう」という感覚があるためだ。&lt;/p&gt;

&lt;p&gt;IT業界でも「仕事は仕事。家に帰ったらパソコンなんて見たくない。」という人もいることはいる。&lt;br /&gt;
ただ、このタイプの人はよほど優秀であるか、つらそうに仕事をしているように見えるかのどちらかという感覚がある。&lt;br /&gt;
(もちろんこれが自分の偏見・観測範囲の問題である可能性は少なくない)&lt;/p&gt;

&lt;p&gt;好きでもないものを仕事にするにしては、プログラミングというジャンルは好きでやってる奴が多すぎるのではないか？&lt;br /&gt;
(プログラマ以外にも、スポーツ選手とかもこういった傾向にあるように思う。)&lt;/p&gt;

&lt;h1 id=&quot;ただ今後はどうなるかはわからない&quot;&gt;ただ、今後はどうなるかはわからない&lt;/h1&gt;
&lt;p&gt;一方で、今後その傾向は変わっていくのかもしれないとも思っている。&lt;/p&gt;

&lt;p&gt;なぜならソフトウェアの需要は今まで増えることはあっても減ることはなく、今後も増え続けるだろうことが予想されるためだ。&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://a16z.com/2011/08/20/why-software-is-eating-the-world/&quot;&gt;Software is eating the world&lt;/a&gt;などといった言葉もある通り、ソフトウェアが他の職種の仕事を奪うのならば、ソフトウェアエンジニア・プログラマと呼ばれる職業の割合は増えるだろう。&lt;/p&gt;

&lt;p&gt;そうなれば、業界はプログラミング愛好家ではない人をどんどん受け入れていかなければならないだろう。その時「趣味でコード書くくらいじゃないと」と言っていられるだろうか？&lt;/p&gt;

&lt;h1 id=&quot;仕事でプログラミングをする人が増えたとき&quot;&gt;仕事でプログラミングをする人が増えたとき&lt;/h1&gt;
&lt;p&gt;前述のような状況になったとき、「休日にプログラミングの勉強ぐらいしたら？」と発言したら「サービス残業を要求するのか？非常識だ」と総スカンになるかもしれない。自分はその時どう向き合えばいいのだろうか？&lt;/p&gt;

&lt;p&gt;少なくとも業務時間中にみっちり研修して戦力になるまで育成することは避けられなくなるだろう。&lt;br /&gt;
しかしそうなってきたときに &lt;strong&gt;「興味ない人間に業務ができるレベルのプログラミングを教えることは可能なのか？」&lt;/strong&gt; という問題が出てくる。&lt;/p&gt;

&lt;p&gt;今のところ、勝手に育ってきた(と少なくとも思っている)自分はこの問題に対する答えを持ち合わせていない。&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;「AIによってプログラマの仕事が奪われるのでは？」という説もあるが、個人的には完全に奪われることはなく、周辺の仕事がいくらでもあるだろうと思っている。これについてもいずれ吐き出したい。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="dump" /><summary type="html">残念ながら現在はそう Twitterを始めとしたネットではよく「プログラマとして食っていくには趣味で休日もコード書くくらいじゃないと」といった言葉がささやかれる。</summary></entry><entry><title type="html">やる気がない</title><link href="/braindump/dump/2023/01/11/lost-motivation.html" rel="alternate" type="text/html" title="やる気がない" /><published>2023-01-11T22:43:21+09:00</published><updated>2023-01-11T22:43:21+09:00</updated><id>/braindump/dump/2023/01/11/lost-motivation</id><content type="html" xml:base="/braindump/dump/2023/01/11/lost-motivation.html">&lt;h1 id=&quot;昔はやる気があったように思う&quot;&gt;昔はやる気があった…ように思う&lt;/h1&gt;
&lt;p&gt;小さかった頃、人に比べてよく本を読む子供だった。&lt;br /&gt;
下校途中歩きながら本を読んでいたら学校の先生に怒られた。1000ページぐらいあるハリーポッターの最終巻上下を借り、一週間で読み切ったリもした。&lt;/p&gt;

&lt;p&gt;中学生になってからは本はそれほど読まなくなっていたが、ゲーム機を改造するのにハマった。&lt;br /&gt;
WiiやらDSやらPSPやらのHomebrewアプリを動かしたり、Homebrewアプリを日本語化して公開したり、そのやり方をブログにまとめたりしていた。&lt;/p&gt;

&lt;p&gt;高校ではニコニコ動画に入り浸っていた。&lt;br /&gt;
他にもiPod touchのJailbreakをしたり延々Twitterやらブログを書いていた。&lt;br /&gt;
Twitterは当時月3000ツイートしていたりするらしい。自分でも訳がわからないぐらいだ。&lt;/p&gt;

&lt;p&gt;大学時代も高校時代よりも落ち着いたものの相変わらずTwitterをしていたらしい。&lt;br /&gt;
ArchLinuxをMacBook Proに入れて、最終的にOSXを消し去ってWindowsとのデュアルブートにしたり、カスタムROMをビルドしたりと色々いじっていた。&lt;/p&gt;

&lt;h1 id=&quot;最近何に対してもやる気が起きない&quot;&gt;最近何に対してもやる気が起きない&lt;/h1&gt;
&lt;p&gt;そんな中、大学卒業後になにか新しいことを始めていないし、昔やっていたことも結構やめてしまっていることを考えるとだいぶやる気ということを感じる。&lt;br /&gt;
ダラダラとYouTubeを眺めるだけで、時間をドブに捨てているような感覚に襲われる。&lt;/p&gt;

&lt;p&gt;生産的というわけではないが、唯一FGOだけは結構真面目にやっている気がする。2年前ぐらいに多忙でできなくなってしばらく放置し最近ようやく追いついたのを差し引いてもだいぶ長続きしている。&lt;/p&gt;

&lt;p&gt;「仕事でプログラミングとかしていて何か漠然とアウトプットしたい欲が発散されている」とか、「単純に運動しなさすぎて体力が落ちているから意欲も減退してしまっている」とかいくらでも言い訳が出てくるし、もっとシンプルに老化と言えるかもしれないが、それにしても色々失い過ぎなのではないか？とも思う。&lt;/p&gt;

&lt;p&gt;これをなんとかしたいと思っても、一朝一夕でなんとかなる問題でもない気はしている。体力をつけるのが一番手っ取り早いんだろうなと思う程度には。&lt;/p&gt;</content><author><name></name></author><category term="dump" /><summary type="html">昔はやる気があった…ように思う 小さかった頃、人に比べてよく本を読む子供だった。 下校途中歩きながら本を読んでいたら学校の先生に怒られた。1000ページぐらいあるハリーポッターの最終巻上下を借り、一週間で読み切ったリもした。</summary></entry><entry><title type="html">braindump始めた</title><link href="/braindump/intro/2023/01/10/start-braindump.html" rel="alternate" type="text/html" title="braindump始めた" /><published>2023-01-10T23:52:59+09:00</published><updated>2023-01-10T23:52:59+09:00</updated><id>/braindump/intro/2023/01/10/start-braindump</id><content type="html" xml:base="/braindump/intro/2023/01/10/start-braindump.html">&lt;h1 id=&quot;どうでもいいことが書きたい&quot;&gt;どうでもいいことが書きたい&lt;/h1&gt;
&lt;p&gt;技術的なこと&lt;strong&gt;以外&lt;/strong&gt;を書きたくなったので作った。
(技術的なことはQiitaやZennもしくはそれ単体のブログにしたいため)&lt;/p&gt;

&lt;p&gt;基本的に頭の中でぐるぐる考えていることを吐き出す場所なのでbraindumpと名付けた。&lt;/p&gt;

&lt;p&gt;ついでにSwift(やObjective-C)以外の言語とかそれらを使ったツール、Web系技術の実験台として静的コンテンツが欲しくなったというのもある。&lt;/p&gt;

&lt;p&gt;気が済むまで続けるつもり&lt;/p&gt;</content><author><name></name></author><category term="intro" /><summary type="html">どうでもいいことが書きたい 技術的なこと以外を書きたくなったので作った。 (技術的なことはQiitaやZennもしくはそれ単体のブログにしたいため)</summary></entry></feed>